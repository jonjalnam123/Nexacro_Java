<?xml version="1.0" encoding="utf-8"?>
<ADL version="2.0">
  <Application id="application_edupack_sdi" screenid="screen_desktop_sdi" onload="Application_onload">
    <Layout>
      <MainFrame id="mainframe" showtitlebar="true" showstatusbar="false" left="0" top="0" width="1300" height="820" titletext="tobesoft education">
        <ChildFrame id="WorkFrame" formurl="SDIFrame::SDIFrameMain.xfdl" showtitlebar="false"/>
      </MainFrame>
    </Layout>
  </Application>
  <Script type="xscript5.1"><![CDATA[/**
*  Nexacro Professional Training Couse
*  @MenuPath    SDI Main Application
*  @FileName 	application_edupack_sdi.xadl 
*  @Creator 	TOBESOFT Education
*  @CreateDate 	2022/12/22
*  @Desction    SDI Main Application
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2022/12/22      		 TOBESOFT Education	 	  	최초 생성 
*******************************************************************************
*/
/************************************************************************************************
 * application 변수 선언 영역
************************************************************************************************/

this.avWorkFrame = "";
this.avRealTrace = trace;
this.avLocale;				// 다국어Lang(현재)
this.avLocalePost;			// 다국어Lang(바뀔)

/***********************************************************************************************
* Application EVENT 영역(onload, onbeforeclose)
/***********************************************************************************************/

/**
 * @description Applicaton onload시 처리내역
*/
this.Application_onload = function(obj:nexacro.Application,e:nexacro.LoadEventInfo)
{

	// QuikView 여부 설정
	nexacro.setEnvironmentVariable("evQuikView", "N");
	
	//다국어 Lang설정 default KO;
	this.avLocale 	  = "KO";
	this.avLocalePost = "KO";
	this.avMainFrame =  this.mainframe.WorkFrame;	// Main Frame

		
	// 접속경로 확인 및 설정
	trace("===== 접속경로 : " + nexacro.getProjectPath());	
    var nRunMode = "S"; // S : Studio, L : local, D : 개발, R : 운영
	
	//로컬(파일)
	if (system.navigatorname == "nexacro") {
	    nRunMode = "S";
		this.mainframe.set_titletext("로컬(파일) - " + this.mainframe.titletext);
	}
	// 웹 접속
	else{
		var urlPath = window.location.protocol + "//" + window.location.host;
		
		// service URL 설정		
		var objEnv  = nexacro.getEnvironment();
		var objSrv = objEnv.services["SvcUrl"];
		objSrv.set_url(urlPath+"/nexacro/");
				
		//로컬(웹)
	    if (objSrv.url.indexOf("localhost") > -1 || objSrv.url.indexOf("127.0.0.1") > -1 ) {
			nRunMode = "L";
			this.mainframe.set_titletext("로컬(웹)  - " + this.mainframe.titletext);
		}
		//운영
		else {
		    nRunMode = "R";
			
			// trace 정지 설정
			this.afnSetTraceMode(false);
		}
	}	
	nexacro.setEnvironmentVariable("evRunMode", nRunMode);
	
	// Grid 개인화 정보 load
	var sGdsGridXML = nexacro.getPrivateProfile("gdsGridPersonal");
	var objGds 		= this.gdsGridPersonal;	
	objGds.loadXML(sGdsGridXML);
		
	if (system.navigatorname != "nexacro"){
		MyHistory.init(this.onChangeHistory, this);
		
		// 새로고침을 위한 처리 ( application 실행 시 한번만 체크)
		// 새로고침되더라도 hash 값을 그대로 남아있기에
		// hash id 에 해당하는 처리를 하도록 한다.
		var hash = MyHistory.getLocationHash();
/*		
		if (hash){
			// 데이터가 필수가 아니면 체크할 일이 없겠네요
			var data = MyHistory.getData(hash);
			
				trace("22222222222 data : " + data);
			
	//		if (data)	this.onChangeHistory(hash, data);
		}
*/		
	}
};

this.onChangeHistory = function(hash, data)
{
	trace("app onChangeHistory : " + hash + " : " + data);


	if (this.afnIsNull(hash) || hash == "MainPage"){
		this.mainframe.WorkFrame.form.divFrameWork.set_url("SDIFrame::SDIFrameMainForm.xfdl");
		this.mainframe.WorkFrame.form.fnSetDivSize("Main");
		trace("hash is null or MainPage");
	}
	else{	
		trace(">>>>>>>>>>>>>>>>>>>>>> " + this.avMainFrame.formurl + " : " + data.toString());
  		if (!this.afnIsNull(this.avMainFrame.formurl)){
  			this.mainframe.WorkFrame.form.onChangeHistory(hash, data);
 		}
  		else{
			trace("이거는 언제 ?????????????????????????/ ");
 			// History 존재시에는 Main으로 바로 이동한다.			
 			this.gdsUserInfo.loadXML(nexacro.getPrivateProfile("gdsUserInfo"));
 			this.gdsMenu.loadXML(nexacro.getPrivateProfile("gdsMenu")); 		

			this.mainframe.WorkFrame.form.onChangeHistory(hash, data);
  		}
	}
}

this.afnIsNull = function(sValue)
{
    if (new String(sValue).valueOf() == "undefined") return true;
    if (sValue == null) return true;
    
    var ChkStr = new String(sValue);

    if (ChkStr == null) return true;
    if (ChkStr.toString().length == 0 ) return true;
    return false;
};

/**
 * @description trace 재정의하여 trace로그 생성 방지
*/
this.afnSetTraceMode = function(bTrace)
{
	trace("★★ 운영접속시에는 trace 로그를 남기지 않도록 설정되었습니다.");
	
    nexacro.setEnvironmentVariable("evTraceMode", bTrace);
    
	if (bTrace){
		trace = this.avRealTrace;
    }
    else{
        trace = function trace(){};
    }
}

/**
 * @description ESC 통신중단 방지(10월 16일 버전에서는 작동하지 않음)
*/
this.Application_onerror = function(obj:nexacro.Application,e:nexacro.ErrorEventInfo)
{
	trace("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Application_onerror!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
	trace("e.statuscode : " + e.statuscode);
	trace("e.errormsg   : " + e.errormsg  );
	
	// 사용자가 ESC키를 눌렀을 경우 ESC통신 중단 방지처리
	if (e.errorcode == -2147418039) {
		return true;
	}
};]]></Script>
</ADL>
